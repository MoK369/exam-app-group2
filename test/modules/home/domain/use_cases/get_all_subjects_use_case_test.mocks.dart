// Mocks generated by Mockito 5.4.4 from annotations
// in exam_app_group2/test/modules/home/domain/use_cases/get_all_subjects_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:exam_app_group2/core/api/api_result/api_result.dart' as _i4;
import 'package:exam_app_group2/modules/home/domain/entities/exam_entity.dart'
    as _i7;
import 'package:exam_app_group2/modules/home/domain/entities/question_entity.dart'
    as _i8;
import 'package:exam_app_group2/modules/home/domain/entities/subject_entity.dart'
    as _i5;
import 'package:exam_app_group2/modules/home/domain/repo_contract/home_repo_contract.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [HomeRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRepo extends _i1.Mock implements _i2.HomeRepo {
  MockHomeRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.ApiResult<List<_i5.SubjectEntity>?>> getAllSubjects() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllSubjects,
          [],
        ),
        returnValue: _i3.Future<_i4.ApiResult<List<_i5.SubjectEntity>?>>.value(
            _i6.dummyValue<_i4.ApiResult<List<_i5.SubjectEntity>?>>(
          this,
          Invocation.method(
            #getAllSubjects,
            [],
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<List<_i5.SubjectEntity>?>>);

  @override
  _i3.Future<_i4.ApiResult<List<_i7.ExamEntity>?>> getAllExamsOnSubject(
          String? subjectId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllExamsOnSubject,
          [subjectId],
        ),
        returnValue: _i3.Future<_i4.ApiResult<List<_i7.ExamEntity>?>>.value(
            _i6.dummyValue<_i4.ApiResult<List<_i7.ExamEntity>?>>(
          this,
          Invocation.method(
            #getAllExamsOnSubject,
            [subjectId],
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<List<_i7.ExamEntity>?>>);

  @override
  _i3.Future<_i4.ApiResult<List<_i8.QuestionEntity>>> getAllQuestions(
          String? examId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllQuestions,
          [examId],
        ),
        returnValue: _i3.Future<_i4.ApiResult<List<_i8.QuestionEntity>>>.value(
            _i6.dummyValue<_i4.ApiResult<List<_i8.QuestionEntity>>>(
          this,
          Invocation.method(
            #getAllQuestions,
            [examId],
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<List<_i8.QuestionEntity>>>);
}
