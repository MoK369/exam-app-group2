// Mocks generated by Mockito 5.4.4 from annotations
// in exam_app_group2/test/modules/home/UI/layouts/explore_layout/view_model/exam/exam_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:exam_app_group2/core/api/api_result/api_result.dart' as _i5;
import 'package:exam_app_group2/modules/home/domain/entities/exam_entity.dart'
    as _i6;
import 'package:exam_app_group2/modules/home/domain/repositories_contracts/explore_repository.dart'
    as _i2;
import 'package:exam_app_group2/modules/home/domain/use_cases/get_all_exams_on_subject.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeExploreRepository_0 extends _i1.SmartFake
    implements _i2.ExploreRepository {
  _FakeExploreRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetAllExamsOnSubjectUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllExamsOnSubjectUseCase extends _i1.Mock
    implements _i3.GetAllExamsOnSubjectUseCase {
  MockGetAllExamsOnSubjectUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ExploreRepository get homeRepo => (super.noSuchMethod(
        Invocation.getter(#homeRepo),
        returnValue: _FakeExploreRepository_0(
          this,
          Invocation.getter(#homeRepo),
        ),
      ) as _i2.ExploreRepository);

  @override
  _i4.Future<_i5.ApiResult<List<_i6.ExamEntity>?>> execute(String? subjectId) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [subjectId],
        ),
        returnValue: _i4.Future<_i5.ApiResult<List<_i6.ExamEntity>?>>.value(
            _i7.dummyValue<_i5.ApiResult<List<_i6.ExamEntity>?>>(
          this,
          Invocation.method(
            #execute,
            [subjectId],
          ),
        )),
      ) as _i4.Future<_i5.ApiResult<List<_i6.ExamEntity>?>>);
}
